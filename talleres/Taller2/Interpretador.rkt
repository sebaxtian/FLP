#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1
          0 1778 0 28 3 10 #"#lang eopl"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Jhonny Melgarejo 1310251"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Sebastian Rios 1310105"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";*******************************************************************"
 #"***********************"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";;;;; Interpretador"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56
#";; La definici\303\263n BNF para las expresiones del lenguaje:"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;  <programa>       ::= < expresion >"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;                      < un-programa ( exp ) >"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;  <expresion>    ::= < entero >"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;                      < entero-exp ( datum ) >"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;                  ::= < flotante >"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;                      < flotante-exp ( datum ) >"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;                  ::= < \"true\" >"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;                      < true-exp ( datum ) >"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;                  ::= < \"false\" >"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;                      < false-exp ( datum ) >"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;                  ::= < texto >"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;                      < texto-exp ( datum ) >"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;                  ::= < variable >"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;                      < variable-exp ( datum ) >"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";;                  ::= var < variable > = < expresion >"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;                      < variableCreacion-exp ( ?? ) >"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";;                  ::= set < variable > = < expresion >"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;                      < variableAsignacion-exp ( id rhsexp ) >"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;                  ::= { { < expresion > }+ }"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;                      < lista-exp ( datum ) >"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;                  ::= # { { < expresion > }+ }"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;                      < vector-exp ( ?? )>"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;                  ::= fun ( { variable }+ ) { < expresion > }+ end"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;                      < fun-exp ( ids? body? )>"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;                  ::= proc ( { variable }* ) { < expresion > }+ en"
 #"d"
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #";;                      < proc-exp ( ids body )>"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;                  ::= ( variable { < expresion > }* )"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;                      < app-exp ( ?? )>"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";;                  ::= local ( ( { variable = < expresion > }* ) ( "
 #"{ < expresion > }+ ) )"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";;                      < local-exp ( ?? )>"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";;                  ::= if < expresion > ? < expresion > : < expresi"
 #"on >"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #";;                      < if-exp (exp1 exp2 exp3)>"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";;                  ::= cond {[ < expresion expresion > ]}* else < e"
 #"xpresion >"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";;                      < cond-exp ( ?? )>"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;                  ::= < primitive > ( { < expression > }* (,) )"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;                      < primitiva-exp ( ?? ) >"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";;  <primitive>     ::= + | - | * | / | < | =< | > | >= | == | size "
 #"| nth | agregar | delete"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";*******************************************************************"
 #"***********************"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";*******************************************************************"
 #"***********************"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";Especificaci\303\263n L\303\251xica"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"especificacion-lexica"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"espacio"
0 0 24 3 2 #" ("
0 0 14 3 10 #"whitespace"
0 0 24 3 2 #") "
0 0 14 3 4 #"skip"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"comentario"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"//\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 21 3 9 #"#\\newline"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"skip"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"variable"
0 0 24 3 2 #" ("
0 0 14 3 6 #"letter"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 6 #"letter"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"_\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"?\""
0 0 24 3 4 #"))) "
0 0 14 3 6 #"symbol"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"texto"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"'\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 6 #"letter"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\"'\""
0 0 24 3 3 #" ) "
0 0 14 3 6 #"string"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"entero"
0 0 24 3 3 #" (("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #" ("
0 0 14 3 6 #"concat"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"-\""
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 3 #")) "
0 0 14 3 6 #"string"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"flotante"
0 0 24 3 3 #" (("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #" ("
0 0 14 3 6 #"concat"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"-\""
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #") "
0 0 19 3 3 #"\".\""
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 5 #"digit"
0 0 24 3 3 #")) "
0 0 14 3 6 #"string"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41
#";Especificaci\303\263n Sint\303\241ctica (gram\303\241tica)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 25 #"especificacion-gramatical"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"programa"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 14 3 11 #"un-programa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 24 #";;Expresiones constantes"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 6 #"entero"
0 0 24 3 2 #") "
0 0 14 3 10 #"entero-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 8 #"flotante"
0 0 24 3 2 #") "
0 0 14 3 12 #"flotante-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"true\""
0 0 24 3 2 #") "
0 0 14 3 8 #"true-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 7 #"\"false\""
0 0 24 3 2 #") "
0 0 14 3 9 #"false-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"texto"
0 0 24 3 2 #") "
0 0 14 3 9 #"texto-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 53
#";; Variables. Estas son globales para todo el c\303\263digo"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 2 #") "
0 0 14 3 12 #"variable-exp"
0 0 24 3 2 #") "
0 0 17 3 22 #";;Consulta de variable"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"var\""
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 14 3 20 #"variableCreacion-exp"
0 0 24 3 2 #") "
0 0 17 3 40 #";;Creacion de variable, no tiene retorno"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"set\""
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 14 3 22 #"variableAsignacion-exp"
0 0 24 3 2 #") "
0 0 17 3 42 #";;Asignacion de variable, no tiene retorno"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 9 #";; Listas"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"{\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"}\""
0 0 24 3 2 #") "
0 0 14 3 9 #"lista-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 9 #";;Vectore"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"#\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"}\""
0 0 24 3 2 #") "
0 0 14 3 10 #"vector-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 136
(
 #";;Funciones (el primer argumento es el nombre de la funci\303\263n, "
 #"los siguientes los argumentos, se retorna el \303\272ltimo valor de "
 #"la expresion"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"fun\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"end\""
0 0 24 3 2 #") "
0 0 14 3 7 #"fun-exp"
0 0 24 3 2 #") "
0 0 17 3 59
#";;Crea una funci\303\263n y la asigna directamente a una variable"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"proc\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"end\""
0 0 24 3 2 #") "
0 0 14 3 8 #"proc-exp"
0 0 24 3 2 #") "
0 0 17 3 71
(
 #";;Retorna un valor procedimiento, es necesario asignarlo a una varia"
 #"ble"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 38 #";;Invoacion de funciones/procedmientos"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #") "
0 0 14 3 7 #"app-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 49 #";;Locales (crea las variables y retorna un valor)"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 7 #"\"local\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 3 #"\"(\""
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 40 #";;Zona de creaci\303\263n de variables locales"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 19 3 3 #"\"(\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 19 3 3 #"\")\""
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 51
#";;Zona de expresiones (siempre retorna la \303\272ltima)\""
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 19 3 3 #"\"(\""
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 19 3 3 #"\")\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 3 #"\")\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 9 #"local-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 16 #";; Condicionales"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"if\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"?\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\":\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 14 3 6 #"if-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"cond\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"[\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"]\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"else\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 14 3 8 #"cond-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 12 #";;Primitivas"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 9 #"primitive"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #") "
0 0 14 3 13 #"primitiva-exp"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 27 #";; Operaciones aritm\303\251ticas"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"+\""
0 0 24 3 2 #") "
0 0 14 3 8 #"sum-prim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"-\""
0 0 24 3 2 #") "
0 0 14 3 8 #"sub-prim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"*\""
0 0 24 3 2 #") "
0 0 14 3 8 #"mul-prim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"/\""
0 0 24 3 2 #") "
0 0 14 3 8 #"div-prim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 15 #";; Comparaci\303\263n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\"<\""
0 0 24 3 3 #")  "
0 0 14 3 10 #"menor-prim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"=<\""
0 0 24 3 2 #") "
0 0 14 3 10 #"menig-prim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 3 #"\">\""
0 0 24 3 3 #")  "
0 0 14 3 10 #"mayor-prim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\">=\""
0 0 24 3 2 #") "
0 0 14 3 10 #"mayig-prim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 4 #"\"==\""
0 0 24 3 2 #") "
0 0 14 3 10 #"igual-prim"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 20 #";; Listas y vectores"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"size\""
0 0 24 3 2 #") "
0 0 14 3 9 #"size-prim"
0 0 24 3 2 #") "
0 0 17 3 32 #";;Retorna el tama\303\261o de la lista"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 5 #"\"nth\""
0 0 24 3 2 #") "
0 0 14 3 8 #"nth-prim"
0 0 24 3 2 #") "
0 0 17 3 69
(
 #";; Retorna el n-esimo elemento de a lista (se cuenta desde 1 hasta n"
 #")"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 9 #";; Vector"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 9 #"\"agregar\""
0 0 24 3 2 #") "
0 0 14 3 15 #"add-vector-prim"
0 0 24 3 2 #") "
0 0 17 3 32 #";;Agrega un elemento a un vector"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"primitive"
0 0 24 3 2 #" ("
0 0 19 3 8 #"\"delete\""
0 0 24 3 2 #") "
0 0 14 3 5 #"borra"
0 0 24 3 1 #" "
0 0 14 3 2 #"un"
0 0 24 3 1 #" "
0 0 14 3 8 #"elemento"
0 0 24 3 1 #" "
0 0 14 3 2 #"de"
0 0 24 3 1 #" "
0 0 14 3 2 #"un"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 3 2 #") "
0 0 17 3 22 #";;Borrar  de un vector"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;Definir datatypes (Construidos autom\303\241ticamente)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 28 #"sllgen:make-define-datatypes"
0 0 24 3 1 #" "
0 0 14 3 21 #"especificacion-lexica"
0 0 24 3 1 #" "
0 0 14 3 25 #"especificacion-gramatical"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;Escaner"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"just-scan"
0 0 24 3 2 #" ("
0 0 14 3 26 #"sllgen:make-string-scanner"
0 0 24 3 1 #" "
0 0 14 3 21 #"especificacion-lexica"
0 0 24 3 1 #" "
0 0 14 3 25 #"especificacion-gramatical"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";;Parse"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"scan&parse"
0 0 24 3 2 #" ("
0 0 14 3 25 #"sllgen:make-string-parser"
0 0 24 3 1 #" "
0 0 14 3 21 #"especificacion-lexica"
0 0 24 3 1 #" "
0 0 14 3 25 #"especificacion-gramatical"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";El Interpretador"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"interpretador"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"sllgen:make-rep-loop"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"--> \""
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pgm"
0 0 24 3 3 #") ("
0 0 14 3 16 #"evaluar-programa"
0 0 24 3 2 #"  "
0 0 14 3 3 #"pgm"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 25 #"sllgen:make-stream-parser"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 21 #"especificacion-lexica"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 25 #"especificacion-gramatical"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";El Interprete"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; evaluar-programa: <programa> -> numero"
0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #"; funci\303\263n que eval\303\272a un programa teniendo en cuenta un"
 #" ambiente dado (se inicializa dentro del programa)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"evaluar-programa"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pgm"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 24 3 1 #" "
0 0 14 3 8 #"programa"
0 0 24 3 1 #" "
0 0 14 3 3 #"pgm"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"un-programa"
0 0 24 3 2 #" ("
0 0 14 3 4 #"body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 17 #"evaluar-expresion"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 16 #"ambiente-inicial"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; evaluar-expresion: <expresion> <ambiente> -> numero"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; evalua la expresi\303\263n en el ambiente de entrada"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"evaluar-expresion"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 24 3 1 #" "
0 0 14 3 8 #"ambiente"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"entero-exp"
0 0 24 3 2 #" ("
0 0 14 3 6 #"entero"
0 0 24 3 2 #") "
0 0 14 3 6 #"entero"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"flotante-exp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"flotante"
0 0 24 3 2 #") "
0 0 14 3 8 #"flotante"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"true-exp"
0 0 24 3 2 #" ("
0 0 19 3 6 #"\"true\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"false-exp"
0 0 24 3 2 #" ("
0 0 19 3 7 #"\"false\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"texto-exp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"texto"
0 0 24 3 2 #") "
0 0 14 3 5 #"texto"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"variable-exp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 2 #") "
0 0 14 3 8 #"variable"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 20 #"variableCreacion-exp"
0 0 24 3 2 #" ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"rhsexp"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 17 3 5 #";; ??"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 22 #"variableAsignacion-exp"
0 0 24 3 2 #" ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 6 #"rhsexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 7 #"setref!"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 20 #"aplicar-ambiente-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"ambiente"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 17 #"evaluar-expresion"
0 0 24 3 1 #" "
0 0 14 3 6 #"rhsexp"
0 0 24 3 1 #" "
0 0 14 3 8 #"ambiente"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"lista-exp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"vector-exp"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 2 #") "
0 0 14 3 6 #"vector"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"fun-exp"
0 0 24 3 2 #" ("
0 0 14 3 7 #"funcion"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"fun\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"end\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"proc-exp"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 14 3 3 #"ids"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 8 #"ambiente"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"app-exp"
0 0 24 3 2 #" ("
0 0 14 3 10 #"aplicacion"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 8 #"variable"
0 0 24 3 3 #" { "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 2 #" }"
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"local-exp"
0 0 24 3 2 #" ("
0 0 15 3 5 #"local"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"local\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"("
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"("
0 0 19 3 1 #"\""
0 0 24 3 3 #" { "
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 2 #" }"
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 19 3 2 #"\")"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\"("
0 0 19 3 1 #"\""
0 0 24 3 3 #" { "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 2 #" }"
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 19 3 2 #"\")"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 2 #"\")"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"if-exp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"test-exp"
0 0 24 3 1 #" "
0 0 14 3 8 #"true-exp"
0 0 24 3 1 #" "
0 0 14 3 9 #"false-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"true-value?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"evaluar-expresion"
0 0 24 3 1 #" "
0 0 14 3 8 #"test-exp"
0 0 24 3 1 #" "
0 0 14 3 8 #"ambiente"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 17 #"evaluar-expresion"
0 0 24 3 1 #" "
0 0 14 3 8 #"true-exp"
0 0 24 3 1 #" "
0 0 14 3 8 #"ambiente"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 17 #"evaluar-expresion"
0 0 24 3 1 #" "
0 0 14 3 9 #"false-exp"
0 0 24 3 1 #" "
0 0 14 3 8 #"ambiente"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"cond-exp"
0 0 24 3 2 #" ("
0 0 14 3 11 #"condicional"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"cond"
0 0 19 3 1 #"\""
0 0 24 3 4 #" {[ "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 3 #" ]}"
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 13 #"primitiva-exp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"args"
0 0 24 3 2 #" ("
0 0 14 3 22 #"eval-primapp-exp-rands"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #" "
0 0 14 3 8 #"ambiente"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 15 #"apply-primitive"
0 0 24 3 1 #" "
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 9        1873 21           0 0           0 311 0 24 3 1 #"("
0 0 14 3 7 #"var-exp"
0 0 24 3 2 #" ("
0 0 14 3 2 #"id"
0 0 24 3 3 #") ("
0 0 14 3 9 #"apply-env"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"primapp-exp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"args"
0 0 24 3 2 #" ("
0 0 14 3 22 #"eval-primapp-exp-rands"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 15 #"apply-primitive"
0 0 24 3 1 #" "
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"if-exp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"test-exp"
0 0 24 3 1 #" "
0 0 14 3 8 #"true-exp"
0 0 24 3 1 #" "
0 0 14 3 9 #"false-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"true-value?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 24 3 1 #" "
0 0 14 3 8 #"test-exp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"eval-expression"
0 0 24 3 1 #" "
0 0 14 3 8 #"true-exp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"eval-expression"
0 0 24 3 1 #" "
0 0 14 3 9 #"false-exp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"let-exp"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"args"
0 0 24 3 2 #" ("
0 0 14 3 18 #"eval-let-exp-rands"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 15 #"eval-expression"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 3 #"ids"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"proc-exp"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 14 3 3 #"ids"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"app-exp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"proc"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"args"
0 0 24 3 2 #" ("
0 0 14 3 10 #"eval-rands"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"procval?"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 15 #"apply-procedure"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 10 #"eopl:error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 15 #"eval-expression"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 19 3 35 #"\"Attempt to apply non-procedure ~s\""
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"letrec-exp"
0 0 24 3 2 #" ("
0 0 14 3 10 #"proc-names"
0 0 24 3 1 #" "
0 0 14 3 4 #"idss"
0 0 24 3 1 #" "
0 0 14 3 6 #"bodies"
0 0 24 3 1 #" "
0 0 14 3 11 #"letrec-body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"eval-expression"
0 0 24 3 1 #" "
0 0 14 3 11 #"letrec-body"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 22 #"extend-env-recursively"
0 0 24 3 1 #" "
0 0 14 3 10 #"proc-names"
0 0 24 3 1 #" "
0 0 14 3 4 #"idss"
0 0 24 3 1 #" "
0 0 14 3 6 #"bodies"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"set-exp"
0 0 24 3 2 #" ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 7 #"rhs-exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"setref!"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"apply-env-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 15 #"eval-expression"
0 0 24 3 1 #" "
0 0 14 3 7 #"rhs-exp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 9 #"begin-exp"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 24 3 1 #" "
0 0 14 3 4 #"exps"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 3 #"acc"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"exps"
0 0 24 3 1 #" "
0 0 14 3 4 #"exps"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"exps"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 3 #"acc"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"exps"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"exps"
0 0 24 3 5 #")))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"      )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";*******************************************************************"
 #"************************"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;Pruebas"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"x"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"X"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"4"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"true"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"4.5"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"'"
0 0 19 3 6 #"perro'"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"var"
0 0 19 3 1 #" "
0 0 19 3 1 #"x"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 2 #" 8"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"set"
0 0 19 3 1 #" "
0 0 19 3 1 #"x"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 2 #" 3"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"{ "
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"4"
0 0 19 3 1 #" "
0 0 19 3 2 #"5}"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"#{ "
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"4"
0 0 19 3 1 #" "
0 0 19 3 2 #"5}"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"+"
0 0 19 3 1 #"("
0 0 19 3 1 #"4"
0 0 19 3 1 #","
0 0 19 3 2 #"2)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"+"
0 0 19 3 1 #"("
0 0 19 3 1 #"4"
0 0 19 3 1 #","
0 0 19 3 1 #"2"
0 0 19 3 1 #","
0 0 19 3 1 #"2"
0 0 19 3 1 #","
0 0 19 3 1 #"3"
0 0 19 3 1 #","
0 0 19 3 1 #"4"
0 0 19 3 1 #","
0 0 19 3 2 #"5)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #">="
0 0 19 3 1 #"("
0 0 19 3 1 #"4"
0 0 19 3 1 #","
0 0 19 3 2 #"2)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 2 #">="
0 0 19 3 1 #"("
0 0 19 3 1 #"4"
0 0 19 3 1 #","
0 0 19 3 1 #"2"
0 0 19 3 2 #") "
0 0 19 3 1 #"?"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #":"
0 0 19 3 2 #" 8"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"fun"
0 0 19 3 1 #"("
0 0 19 3 9 #"factorial"
0 0 19 3 1 #" "
0 0 19 3 1 #"x"
0 0 19 3 2 #") "
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 2 #"=="
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"0"
0 0 19 3 2 #") "
0 0 19 3 1 #"?"
0 0 19 3 1 #" "
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #":"
0 0 19 3 2 #" ("
0 0 19 3 9 #"factorial"
0 0 19 3 1 #" "
0 0 19 3 1 #"-"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"1"
0 0 19 3 6 #")) end"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 9 #"factorial"
0 0 19 3 1 #" "
0 0 19 3 2 #"5)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"fun"
0 0 19 3 1 #"("
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 1 #"x"
0 0 19 3 1 #" "
0 0 19 3 1 #"y"
0 0 19 3 2 #") "
0 0 19 3 3 #"set"
0 0 19 3 1 #" "
0 0 19 3 1 #"x"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 1 #"+"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"y"
0 0 19 3 2 #") "
0 0 19 3 3 #"set"
0 0 19 3 1 #" "
0 0 19 3 1 #"y"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 1 #"+"
0 0 19 3 1 #"("
0 0 19 3 1 #"y"
0 0 19 3 1 #","
0 0 19 3 1 #"3"
0 0 19 3 2 #") "
0 0 19 3 1 #"*"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"y"
0 0 19 3 5 #") end"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"var"
0 0 19 3 1 #" "
0 0 19 3 4 #"fact"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 4 #"proc"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 2 #") "
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 2 #"=="
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"0"
0 0 19 3 2 #") "
0 0 19 3 1 #"?"
0 0 19 3 1 #" "
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #":"
0 0 19 3 2 #" ("
0 0 19 3 4 #"fact"
0 0 19 3 1 #" "
0 0 19 3 1 #"-"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"1"
0 0 19 3 6 #")) end"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 4 #"fact"
0 0 19 3 1 #" "
0 0 19 3 2 #"4)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"var"
0 0 19 3 1 #" "
0 0 19 3 4 #"func"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 4 #"proc"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #" "
0 0 19 3 1 #"y"
0 0 19 3 2 #") "
0 0 19 3 3 #"set"
0 0 19 3 1 #" "
0 0 19 3 1 #"x"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 1 #"+"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"y"
0 0 19 3 2 #") "
0 0 19 3 3 #"set"
0 0 19 3 1 #" "
0 0 19 3 1 #"y"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 1 #"+"
0 0 19 3 1 #"("
0 0 19 3 1 #"y"
0 0 19 3 1 #","
0 0 19 3 1 #"3"
0 0 19 3 2 #") "
0 0 19 3 1 #"*"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"y"
0 0 19 3 5 #") end"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"size"
0 0 19 3 2 #"({"
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"4"
0 0 19 3 1 #" "
0 0 19 3 3 #"5})"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"size"
0 0 19 3 3 #"(#{"
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"4"
0 0 19 3 1 #" "
0 0 19 3 3 #"5})"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"nth"
0 0 19 3 2 #"({"
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"4"
0 0 19 3 1 #" "
0 0 19 3 1 #"5"
0 0 19 3 1 #"}"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"3)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"nth"
0 0 19 3 3 #"(#{"
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"4"
0 0 19 3 1 #" "
0 0 19 3 1 #"5"
0 0 19 3 1 #"}"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"2)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"agregar"
0 0 19 3 3 #"(#{"
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"4"
0 0 19 3 1 #" "
0 0 19 3 1 #"5"
0 0 19 3 1 #"}"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"10)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"delete"
0 0 19 3 3 #"(#{"
0 0 19 3 1 #"1"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"4"
0 0 19 3 1 #" "
0 0 19 3 1 #"5"
0 0 19 3 1 #"}"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"2)"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;Bug en cond no trabaja con textos"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"cond"
0 0 19 3 2 #" ["
0 0 19 3 1 #">"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"y"
0 0 19 3 2 #") "
0 0 19 3 1 #"1"
0 0 19 3 3 #"] ["
0 0 19 3 1 #"<"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"y"
0 0 19 3 2 #") "
0 0 19 3 1 #"2"
0 0 19 3 2 #"] "
0 0 19 3 4 #"else"
0 0 19 3 2 #" 2"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 1 #"<"
0 0 19 3 1 #"("
0 0 19 3 1 #"x"
0 0 19 3 1 #","
0 0 19 3 1 #"y"
0 0 19 3 2 #") "
0 0 19 3 1 #"?"
0 0 19 3 1 #" "
0 0 19 3 1 #"'"
0 0 19 3 4 #"hola"
0 0 19 3 1 #"'"
0 0 19 3 1 #" "
0 0 19 3 1 #":"
0 0 19 3 1 #" "
0 0 19 3 1 #"'"
0 0 19 3 3 #"no'"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"local"
0 0 19 3 5 #" ( ( "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"b"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 3 #") ("
0 0 19 3 1 #"+"
0 0 19 3 1 #"("
0 0 19 3 1 #"a"
0 0 19 3 1 #","
0 0 19 3 1 #"b"
0 0 19 3 1 #","
0 0 19 3 5 #"3)) )"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"local"
0 0 19 3 5 #" ( ( "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 1 #"b"
0 0 19 3 1 #" "
0 0 19 3 1 #"="
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 3 #") ("
0 0 19 3 1 #"'"
0 0 19 3 6 #"prueba"
0 0 19 3 1 #"'"
0 0 19 3 4 #") )\""
0 0 24 3 1 #")"
0           0
